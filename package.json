{
  "version": "0.1.1",
  "name": "matrix-node-sdk",
  "main": "./adsdk.js",
  "dependencies": {
    "async": "^0.7.0",
    "async-waterfall": "0.1.5",
    "browserify": "^11.0.1",
    "colors": "^1.1.2",
    "debug": "^2.2.0",
    "engine.io-client": "^1.5.4",
    "form-data": "0.1.4",
    "getmac": "^1.0.6",
    "lodash": "^3.10.1",
    "long-stack-traces": "^0.1.2",
    "mime": "^1.2.11",
    "mocha": "^2.2.5",
    "moment": "~2.5.1",
    "nedb": "^1.1.2",
    "node-uuid": "~1.4.0",
    "path-to-regexp": "^0.2.5",
    "properties-parser": "~0.1.1",
    "ps-tree": "0.0.3",
    "q": "^1.4.1",
    "request": "^2.33.0",
    "xunit-file": "0.0.6"
  },
  "readme": "# Admobilize Node SDK\n\n## Overview\n\n**AdMobilize  Node SDK **, is a node module to connect in an easy way to the  **AdMobilize API **\n\n\n\n\n####With this module you can\n\n* Register an  application\n* Create AdMobilize users\n* Authenticate AdMobilize users\n\n\n## Try this module\nFollow this steps\n\n### Install node  \n* Go to [http://nodejs.com/downloads](http://nodejs.com/downloads).\n* Download the installer for you OS and follow the wizard steps\n\n\n\n###Clone the repo\n\n```bash\ngit clone https://bitbucket.org/admobilize/admobilize-node-sdk.git\n```\n\n### Install depedencies\n\n\n```bash\ncd admobilize-node-sdk\nnpm install \n```\n\n\n### 1) A simple example to authenticate a client\n\n\n```javascript\n   // You need to incluide the Admobilize SDK module\n\n   var admobilize = require('path_to_sdk_module/admobilize.js');\n   var admobilizeSDK = new admobilize(); \n\n   //create a new client instance\n   var myClient = new admobilizeSDK.client('your_cliend_id','your_client_secret');\n\n   //create a new authenticator instance\n   var myAuthenticator = new admobilizeSDK.authenticator();\n\n\n   /**\n   *To authenticate a client calling the authenticateClient method \n   *from the Authenticator module passing the client instance and a callback function\n   */\n\n    myAuthenticator.authenticateClient(myClient,function(error, responseJSON) {\n     //Do something with my authenticated client\n\n  });\n\n```\n\n### 2) How to register a new user\nYou need to do the steps in the last example and do somethig like this:\n```javascript\n\n  // Incluide the AdMobilize\n  var admobilize = require('path_to_sdk_module/admobilize.js');\n  var admobilizeSDK = new admobilize(); \n\n  //create a new user instance \n  //set username , password and a client object\n  var newUser =  new admobilizeSDK.user('a_username','a_secure_password', myClient);\n  \n  //create a new register instance\n  var myRegister = new admobilizeSDK.register();\n\n  /**\n   * call the registerUser method \n   *from the Register module passing the client instance , user instance and a callback function\n   */\n   myRegister.registerUser(client,newUser,function (error, responseJSON) {\n\n\n     //Do something with my new registered user\n\n     //if an error occurs the error variable will be an Error instance  and responseJSON will be an object with the response from the server that describes the error, if none error occurs  the error variable and responseJSON  will be undefined\n     //\n  });\n\n```\n\n\n\n### 3) Authenticate a registered user\nYou need to do authenticate a client  (first example) and then authenticate the user.\n```javascript\n\n   // Incluide the AdMobilize\n  var admobilize = require('path_to_sdk_module/admobilize.js');\n  var admobilizeSDK = new admobilize();\n\n  //create a new client instance\n  var myClient = new admobilizeSDK.client('your_cliend_id','your_client_secret');\n   \n\n  //.... do the same as the first example to authenticate our client\n\n  /*\n  * create a new user instance , if the user is already registered you just need set the username ,password, and a client object\n  * if is not registered yet you need to do the steps in the second example\n  */\n\n  var myUser =  new admobilizeSDK.user('a_username','a_secure_password', myClient);\n\n   //create a new authenticator instance\n   var myAuthenticator = new admobilizeSDK.authenticator();\n\n\n  \n   /**\n   *To authenticate an user calling the authenticateUser method \n   *from the Authenticator module passing the user instance, user instance and a callback function\n   */\n\n    myAuthenticator.authenticateUser(myUser,function(error,responseJSON) {\n     //Do something with my authenticated user\n     \n     \n\n  });\n\n```\n\n\n### 4) Register a device\nYou need to do authenticate a client  (first example) ,  authenticate the user and then register a device.\n```javascript\n\n  // Incluide the AdMobilize\n  var admobilize = require('path_to_sdk_module/admobilize.js');\n  var admobilizeSDK = new admobilize();\n\n  //create a new device instance\n  //set device name and description  and an user object\n   var myDevice  = new  admobilizeSDK.device('name','description', myUser);\n\n   var  myRegister = new  admobilizeSDK.register();\n    myRegister.registerDevice(registeredUser, myDevice , function(error, responseJSON) {\n\n       //do something with the registered device\n    });\n     \n\n  });\n\n```\nNote: When the device is successfully registered the device gets a device token that you can access with the method getDeviceToken from the Device mudule\n\n### 6) Heartbeat\n\nRegister a device start automatically a proccess named \"Hearbeat\" that verify the connection to the admobilize API server, you can verfy the status of the connection with the isAlive method from the Device module\n\n```javascript\n\n   var status = myDevice.isAlive();// resturns a boolean value , is true if the server connection is OK.\n\n```\n  The Heartbeat proccess use the user access token to do the request and verfy the connection with the server , if the user token expires\n  the proccess stop and do a resfresh token request automatically to get a new token , then the proccess restart.\n\n  By default the proccess runs  every 30 seconds (30000 miliseconds) , you  can change this value in the config.js file \n (admobilize-node-sdk/config/config.js) changing the HEARTBEAT_INTERVAL variable.\n\n### 6) Submit data point\nTo submit point information you need a registered device  (like the last example), you can send geolocalitation info and files\n```javascript\n\n  // Incluide the Device module\n    // Incluide the AdMobilize\n  var admobilize = require('path_to_sdk_module/admobilize.js');\n  var admobilizeSDK = new admobilize();\n\n  //my registered device\n   var myRegisterDevice  = new admobilizeSDK.device('device_id');\n\n    myRegisterDevice.submitDataPoint(\n         'access_token' ,  //access token from a authenticated user\n         'a json encoded', //he data point JSON encoded. e.g. {\"ty\":\"mc\",\"cl\":{\"loc_type\":0,\"si\":9,\"aps\":false},\"sr\":[]}\n         'file data',  // data from a file , like a .png, .jpg \n         function(error, responseJSON) { //  a callback function\n           \n         }\n      );\n\n     \n\n  });\n\n```\n\n\nNote:\nYou can get the \"file data\" from any file with the \"fs\"  module from Node.js, like this\n```javascript  \n  \n  var fileSystem = require('fs');\n  var fileData = fileSystem.createReadStream('path_to_my_file' , 'encode_type' );  // set the path to the file and an encode type (ex: 'utf8')\n\n```\n\n### 7) Get devices  associated to an user\nYou can get a list of devices associated to an user.\n```javascript\n\n   // getDevices method recives a callback function and a options json , these options are optional ,\n   //some options are  pagination_page,pagination_limit and pagination_sort\n   myUser.getDevices(callback, options); \n```\nGet a specific device\n```javascript\n\n   // getDeviceById method recives a  deviceId, a callback function and a options json , these options are \n   // optional.\n   myUser.getDeviceById(\"deviceId\",callback, options); \n```\n\n### 8) Get   data from devices  associated to an user\n\nGet a json with the data from devices associated to an user\n\n```javascript\n\n   // getDevicesData method recives a callback function and a options json \n   myUser.getDevicesData(callback, options); \n``` \n\n###Run the examples\nThe examples folder has a few examples that you can run:\n\n####Authenticate a client\nAuthenticateClient.js creates a new client instance and authenticate it using the AdMobilize API,if\nyour want to try it  follow the next steps.\n\n```bash\n cd examples\n node AuthenticateClient.js \n```\n\n####Register an user\n  \nRegisterUser.js creates a new client instance and authenticate it ,creates an user\nand register it using the AdMobilize API , if your want to try it  follow the next steps.\n\n```bash\n cd examples\n node RegisterUser.js\n```\n\n####Note\n If you have an \"User Already exists\" error you need to change the username to create a new user or if you have permissions clean your user's collection.\n\n\n####Authenticate a registered user\n  \nAuthenticateUser.js creates a new client instance and authenticate it ,authenticate the user from RegisterUser.js to the AdMobilize API.\n\n```bash\n cd examples\n node AuthenticateUser.js\n```\n\n\n####Submit data point\n  \nSubmitDataPointTest.js have all the steps , autheticate a client, register a new user, authenticate an user , register a device and  sends data from a registered device (geolocalication info and a png file)\n\n```bash\n cd examples\n node SubmitDataPointTest.js\n```\n\n\n####Get devices\n  \nGetDevicesTest.js get all devices from an user, get a specific device by id and retrieve data from that device\n\n```bash\n cd examples\n node GetDevicesTest.js\n```\n\n\n###Final notes\n  * You can view the documentation from the Admobilze node SDK in the index.html file in admobilize-node-sdk/out/index.html \n  * If you want to change the host url or the paths you can do it in the config.js file  in admobilize-node-sdk/config/config.js\n\n\n  \n\n \n\n",
  "readmeFilename": "README.md",
  "description": "## Overview",
  "_id": "admatrix-node-sdk@0.1.0",
  "_shasum": "1fee383b617e22c59913105578e879834ba9597b",
  "_resolved": "git+https://brianofadmobilize:8071981MkHaz@bitbucket.org/admobilize/admobilize-node-sdk.git#f487dab0ff8a07a149682b7935c2efd0b36f106a",
  "_from": "git+https://brianofadmobilize:8071981MkHaz@bitbucket.org/admobilize/admobilize-node-sdk.git",
  "devDependencies": {
    "chai": "^2.2.0",
    "gulp": "^3.8.11",
    "gulp-mocha": "^2.0.1",
    "gulp-todo": "^2.5.1",
    "gulp-util": "^3.0.4",
    "gulp-watch": "^4.2.4",
    "shelljs": "^0.4.0",
    "should": "^6.0.1",
    "yargs": "^3.7.2"
  },
  "gitHead": "945ef9eb21baa63e6bf2da693aa7f28853b3378f"
}
